version: "3.9"

networks:
  weather-forecast-net:

services:
  postgres:
    image: "postgres"
    container_name: weather-forecast-postgres
    networks:
      - weather-forecast-net
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 3

  redis:
    image: "redis"
    container_name: weather-forecast-redis
    networks:
      - weather-forecast-net
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  app:
    container_name: weather-forecast-img
    build:
      dockerfile: Dockerfile
      context: .
    networks:
      - weather-forecast-net
    ports:
      - 5050:80
    environment:
      ConnectionStrings__Postgres: "Host=weather-forecast-postgres;Database=mydatabase;Username=postgres;password=postgres"
      ConnectionStrings__Redis: "weather-forecast-redis:6379"
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_PRINT_TELEMETRY_MESSAGE: "false"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy